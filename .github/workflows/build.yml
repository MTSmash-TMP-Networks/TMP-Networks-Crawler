name: Build Executable with Dynamic Templates

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      # Schritt hinzugef端gt: Templates dynamisch generieren (main.py einmal starten und nach kurzer Zeit stoppen)
      - name: Generate Templates dynamically
        run: |
          python main.py &
          PID=$!
          sleep 10  # Warte einige Sekunden, bis Templates erstellt wurden
          kill $PID || true
        shell: bash

      # Pr端fen, ob Templates existieren (Debugging-Zwecke)
      - name: Verify Templates Folder
        run: |
          ls templates
        shell: bash

      # Build f端r Unix (Linux/macOS)
      - name: Build Executable on Unix
        if: runner.os != 'Windows'
        run: |
          pyinstaller --onefile --add-data "templates:templates" main.py
        shell: bash

      # Build f端r Windows
      - name: Build Executable on Windows
        if: runner.os == 'Windows'
        run: |
          pyinstaller --onefile --add-data "templates;templates" main.py
        shell: cmd

      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ matrix.os }}
          path: dist/main*
